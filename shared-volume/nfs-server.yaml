heat_template_version: 2015-04-30

description: Simple template to deploy a NFS node

parameters:
  name:
    type: string
  syseleven_net:
    type: string
  public_network:
    type: string
  volume_id:
    type: string
  ssh_keys:
    type: comma_delimited_list

resources:
  nfs_server:
    type: OS::Nova::Server 
    properties:
      image: Ubuntu Jammy 22.04 (2022-08-11)
      user_data_format: RAW
      user_data: { get_resource: cloud-init-config }
      name: { get_param: name }
      flavor: m1.tiny
      networks:
        - port: { get_resource: syseleven_port }
  
  allow_ssh:
    type: OS::Neutron::SecurityGroup
    properties:
      description: allow incoming traffic on ssh port and icmp
      name: allow incoming traffic on ssh and icmp
      rules: [{direction: ingress, remote_ip_prefix: 0.0.0.0/0, port_range_min: 22, port_range_max: 22, protocol: tcp} , {direction: ingress, protocol: icmp}]

  syseleven_port:
    type: OS::Neutron::Port
    properties:
      network: { get_param: syseleven_net}
      security_groups: [ {get_resource: allow_ssh}, default ]
  
  syseleven_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: { get_param: public_network }
      port_id: { get_resource: syseleven_port }

# attach existingvolume to a server
  my_volume_attachment:
    depends_on: [ nfs_server ]
    type: OS::Cinder::VolumeAttachment
    properties:
      instance_uuid: { get_resource: nfs_server }
      volume_id: { get_param: volume_id }  

  cloud-init-config:
   # cloud init demo resource
   type: OS::Heat::CloudConfig
   properties:
     cloud_config:
       runcmd:
         - /root/create_nfs_share.sh
       write_files:
         -  content: { get_file: scripts/create_nfs_share.sh }
            permissions: 0755
            path: /root/create_nfs_share.sh
       users:
           - name: syseleven
             gecos:  Workshop user
             lock-passwd: false
             sudo: ALL=(ALL) NOPASSWD:ALL
             shell: /bin/bash
             ssh-authorized-keys: { get_param: ssh_keys }

outputs:
  lb_ip:
    description: loadbalancer floating ip
    value: { get_attr: [syseleven_floating_ip, floating_ip_address] }

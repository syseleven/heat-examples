heat_template_version: ocata

description: simple prometheus server

parameters:
  name:
    type: string
  network_id:
    type: string
  image:
    type: string
    default: Ubuntu Jammy 22.04 (2022-08-11)
  security_groups:
    type: comma_delimited_list
  ssh_keys:
    type: comma_delimited_list
  affinity_group:
    type: string
  os_username:
    type: string
  os_password:
    type: string
  os_tenant_id:
    type: string
  upscale_url:
    type: string
  downscale_url:
    type: string
  heatstack_id:
    type: string

resources:
  host:
    type: OS::Nova::Server
    properties:
      name: { get_param: name }
      metadata:
        stackid: { get_param: heatstack_id }
      user_data_format: RAW
      user_data: { get_resource: cloud-init-config }    
      image: { get_param: image }
      flavor: m1.tiny
      networks:
        - port: { get_resource: port }
      scheduler_hints:
        group: { get_param: affinity_group }

  cloud-init-config:
   # cloud init resource
   type: OS::Heat::CloudConfig
   properties:
     cloud_config:
       manage_etc_hosts: true
       users:
          - name: syseleven
            gecos: SysEleven Stack user
            sudo: ALL=(ALL) NOPASSWD:ALL
            shell: /bin/bash
            ssh-authorized-keys: { get_param: ssh_keys }
       write_files:
          - content: { get_file: scripts/setup_prometheus_node.sh }
            permissions: '0500'
            path: /root/setup_prometheus_node.sh
          - content: { get_file: scripts/setup_prometheus_server.sh }
            permissions: '0500'
            path: /root/setup_prometheus_server.sh

       runcmd:
          - [ /root/setup_prometheus_server.sh, { get_param: os_username }, { get_param: os_password }, { get_param: os_tenant_id }, { get_param: heatstack_id }, { get_param: upscale_url }, { get_param: downscale_url }]
          - /root/setup_prometheus_node.sh
       packages:
         - curl
         - unzip
         - python-openstackclient
       
  port:
    type: OS::Neutron::Port
    properties:
      network: { get_param: network_id }
      security_groups: { get_param: security_groups }

  floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: ext-net
      port_id: { get_resource: port }
